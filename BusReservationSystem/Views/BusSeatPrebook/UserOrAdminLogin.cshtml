@model UserData.Core.Model.UserLogin
@{
    string message = ViewBag.Message != null ? ViewBag.Message : string.Empty;
    string successmessage = TempData["SuccessMessage"] != null ? TempData["SuccessMessage"].ToString() : string.Empty;
}
<head>

    <style>

        .input-group {
            margin-bottom: 1rem;
            display: flex;
            flex-direction: column;
        }

            .input-group label {
                color: #fff;
                font-family: tahoma;
            }

            .input-group span {
                color: #888;
                font-family: tahoma;
                font-size: 11px;
            }

        .input-icon-container {
            display: flex;
            flex-direction: row;
            border: 1px solid #374669;
            border-radius: 5px;
            background: #fff;
            align-items: center;
            overflow: hidden;
        }

            

            .input-icon-container input {
                outline: none;
                border: none;
                background: none;
                font-size: 1em;
                padding: .5em;
                color: inherit;
                flex: auto 1 1;
                width: 100%;
                background: none;
                background-color: transperant;
            }

            .input-icon-container .fa {
                padding: 10px;
            }

        .fa.fa-user {
            background: #374669;
            color: #fff;
        }
        #div {
            height: fit-content;
            width: 400px;
            margin: 20vh auto 0 auto;
            background-color: whitesmoke;
            border-radius: 30px;
            padding: 50px;
            font-size: 18px;
            margin-top: 45px;
            font-weight: bold;
            font-family: 'Times New Roman';
        }

        #styles {
            margin-right: 100px
        }
        .error{
            color:red;
            
        }

        
        #StudentPassword
        {
            width:180px;
            margin-left:50px;
        }

        body {
            background-image: url('Images/Busreservation.jpg');
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
        }

    </style>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <link rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css" />
    <link rel="stylesheet"
          href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
          integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
          crossorigin="anonymous"/>
    
</head>

<body>
    <center>
        <div id="div">
            <i class="fa-solid fa-user-large fa-5x"></i>
            @using (Html.BeginForm("UserOrAdminLoginVerification", "BusSeatPrebook", FormMethod.Post, new { id = "formvalidation" }))

            {
                <br />
                @if (!string.IsNullOrEmpty(message))
                {
                    <div class="alert alert-danger" style="width:300px;">@message</div>
                }
                @if (!string.IsNullOrEmpty(successmessage))
                {
                    <div class="alert alert-success" style="width:300px;">@successmessage</div>
                }

                <div class="form-group">
                    <label for="email">EmailAddress<i style="color:red;">*</i>:</label>
                    <div class="input-icon-container">
                        @Html.TextBoxFor(m=>m.UserEmailid, new {@type="email", @id = "UserEmailid" })<br />
                    </div>

                </div>
                <div class="form-group">
                    <label for="pwd">Password<i style="color:red;">*</i>:</label>
                    <div class="input-icon-container">
                        @Html.PasswordFor(m => m.UserPassword, new { @type = "password", @class = "form-control", @id = "UserPassword",@maxlength=15,@minlength=8, })
                        <i class="fa fa-eye-slash" id="eye"></i>
                    </div>
                </div>
                <input type="checkbox" value="lsRememberMe" id="rememberMe"> <label for="rememberMe">Remember me</label>
                <br />

                <button type="submit" class="btn btn-primary" onclick="lsRememberMe()" style="background-color:green;">
                    Login

                </button>


            }

            <p>or</p>
            <button class="btn btn-primary" onclick="signup()" style="background-color:orangered;">
                SignUp
            </button>

        </div>
    </center>

</body>


<script>

    function myfunc() {
        var x = document.getElementById("StudentPassword");
        if (x.type === "password") {
            x.type = "text";
        } else {
            x.type = "password";
        }
    }
    
    function signup() {
        if (confirm("Are you sure want to signup"))
            location.href = "/BusSeatPrebook/UserOrAdminSignUp/";
    }
    function clearMessage() {
        setTimeout(function () {
            var messageElement = document.querySelector('.alert');
            if (messageElement) {
                messageElement.style.display = 'none';
            }
        }, 5000); 
    }
    window.addEventListener('load', clearMessage);

    $("#formvalidation").validate({
        rules: {
            
            UserEmailid: {
                required: true,
                email: true,
            },
            UserPassword: {
                required: true,
            },
            
        },
        messages: {
            
            UserEmailid: {
                required: "Email field is required",
                email: "Please enter a valid email",
            },
            UserPassword: {
                required: "Password field is required",
                
            },
            
        },
        errorPlacement: function (error, element) 
        {
            if (element.parent(".input-icon-container").length) {
                
                error.insertAfter(element.parent(".input-icon-container"));
            } else {
                error.insertAfter(element);
            }
        },
    });

    $(function () {

        $('#eye').click(function () {

            if ($(this).hasClass('fa-eye-slash')) {

                $(this).removeClass('fa-eye-slash');

                $(this).addClass('fa-eye');

                $('#UserPassword').attr('type', 'text');

            } else {

                $(this).removeClass('fa-eye');

                $(this).addClass('fa-eye-slash');

                $('#UserPassword').attr('type', 'password');
            }
        });
    });
    if (window.history.replaceState) {
        window.history.replaceState(null, null, window.location.href);
    }

    const rmCheck = document.getElementById("rememberMe"),
        emailInput = document.getElementById("UserEmailid");
    passwordInput = document.getElementById("UserPassword");

    if (localStorage.checkbox && localStorage.checkbox !== "") {
        rmCheck.setAttribute("checked", "checked","checked");
        emailInput.value = localStorage.username;
        passwordInput.value = localStorage.password;
    } else {
        localStorage.clear();
    }

    function lsRememberMe() {
        if (rmCheck.checked && emailInput.value !== "" && passwordInput.value !== "") {
            localStorage.username = emailInput.value;
            localStorage.password = passwordInput.value;
            localStorage.checkbox = rmCheck.value;
        } else {
            localStorage.clear();
        }
    }
    function preventBack() { window.history.forward(); }
    setTimeout("preventBack()", 0);
    window.onunload = function () { null };
</script>