// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Entity.Models;

public partial class BusReservationdbContext : DbContext
{
    public BusReservationdbContext()
    {
    }

    public BusReservationdbContext(DbContextOptions<BusReservationdbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<BusMaster_Table> BusMaster_Tables { get; set; }

    public virtual DbSet<BusTravelScheduleTbl> BusTravelScheduleTbls { get; set; }

    public virtual DbSet<UserOrAdminSignup_Table> UserOrAdminSignup_Tables { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=(localdb)\\STS821-LOGESH;Initial Catalog=BusReservationdb;Integrated Security=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<BusMaster_Table>(entity =>
        {
            entity.HasKey(e => e.Bus_Id);

            entity.ToTable("BusMaster_Table");

            entity.Property(e => e.Bus_Name)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Create_Time_Stramp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Update_Time_Stramp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<BusTravelScheduleTbl>(entity =>
        {
            entity.HasKey(e => e.BusDetailsId);

            entity.ToTable("BusTravelScheduleTbl");

            entity.Property(e => e.Create_Time_Stamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DepatureDate)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.DepatureTime).HasColumnType("datetime");
            entity.Property(e => e.Destination)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Source)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Update_Time_Stamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
        });

        modelBuilder.Entity<UserOrAdminSignup_Table>(entity =>
        {
            entity.HasKey(e => e.UserId);

            entity.ToTable("UserOrAdminSignup_Table");

            entity.Property(e => e.Address)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.DOB)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.EmailId)
                .IsRequired()
                .HasMaxLength(80)
                .IsUnicode(false);
            entity.Property(e => e.Gender)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Hash_Password).IsRequired();
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.Phonenumber)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Salt_Password).IsRequired();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}